---
- name: (MacOS) PRE-CHECK GitLab Runner exists
  block:
    - name: (MacOS) Check gitlab-runner executable exists
      ansible.builtin.stat:
        path: "{{ gitlab_runner_executable }}"
      register: gitlab_runner_exists

    - name: (MacOS) Set fact -> gitlab_runner_exists
      ansible.builtin.set_fact:
        gitlab_runner_exists: "{{ gitlab_runner_exists.stat.exists }}"

    - name: (MacOS) Get existing version
      ansible.builtin.shell:
        cmd: "set -o pipefail && {{ gitlab_runner_executable }} --version | awk '/Version: ([\\d\\.]*)/{print $2}'"
      register: existing_version_shell
      failed_when: false
      check_mode: false
      changed_when: false

    - name: (MacOS) Set fact -> gitlab_runner_existing_version
      ansible.builtin.set_fact:
        gitlab_runner_existing_version: "{{ existing_version_shell.stdout if existing_version_shell.rc == 0 else '0' }}"

- name: (MacOS) Precreate necessary directories for arm64 architecture
  when: gitlab_runner_arch == 'arm64'
  block:
    - name: (MacOS) Precreate gitlab-runner log directory
      become: true
      ansible.builtin.file:
        path: /usr/local/var/log
        state: directory
        mode: "0755"
        owner: "{{ ansible_user_id | string }}"

    - name: (MacOS) Precreate directory {{ gitlab_runner_directory }}
      become: true
      ansible.builtin.file:
        mode: "0755"
        owner: root
        path: "{{ gitlab_runner_directory }}"
        state: directory

- name: (MacOS) INSTALL GitLab Runner for macOS
  when: (not gitlab_runner_exists)
  block:
    - name: (MacOS) Download GitLab Runner
      become: true
      ansible.builtin.get_url:
        url: "{{ gitlab_runner_download_url }}"
        dest: "{{ gitlab_runner_executable }}"
        force: true
        mode: +x

    - name: (MacOS) Install GitLab Runner
      ansible.builtin.command: |
        "{{ gitlab_runner_executable }}" install
        {% if gitlab_runner_working_directory | default(false) %}
        --working-directory "{{ gitlab_runner_working_directory }}"
        {% endif %}

    - name: (MacOS) Start GitLab Runner
      ansible.builtin.command: "{{ gitlab_runner_executable }} start"
      when: gitlab_runner_macos_start_runner

- name: (MacOS) UPGRADE GitLab Runner for macOS
  when:
    - gitlab_runner_exists
    - gitlab_runner_existing_version != gitlab_runner_wanted_version or gitlab_runner_wanted_version == 'latest'
  block:
    - name: (MacOS) Stop GitLab Runner
      ansible.builtin.command: "{{ gitlab_runner_executable }} stop"

    - name: (MacOS) Download GitLab Runner
      become: true
      ansible.builtin.get_url:
        url: "{{ gitlab_runner_download_url }}"
        dest: "{{ gitlab_runner_executable }}"
        force: true
        mode: "0744"

    - name: (MacOS) Setting Permissions for gitlab-runner executable
      ansible.builtin.file:
        path: "{{ gitlab_runner_executable }}"
        owner: "{{ ansible_user_id | string }}"
        group: "{{ ansible_user_gid | string }}"
        mode: +x
      become: true

    - name: (MacOS) Start GitLab Runner
      ansible.builtin.command: "{{ gitlab_runner_executable }} start"
