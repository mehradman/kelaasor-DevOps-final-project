stages:
  - build
  - deploy

variables:
  DOCKER_OPTS: "--insecure-registry=registry:5000"
  IMAGE_REPO: "registry:5000"
  IMAGE_NAME: "go-web-app"

.build:
  stage: build
  script:
    - docker build -t $IMAGE_REPO/$IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_REPO/$IMAGE_NAME:$IMAGE_TAG

.dev_rules:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "dev" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"

build_dev:
  extends: .build
  variables:
    IMAGE_TAG: $CI_COMMIT_SHORT_SHA
  rules:
    - !reference [.dev_rules, rules]

deploy_dev:
  image: ubuntu:22.04
  stage: deploy
  rules:
    - !reference [.dev_rules, rules]
  variables:
    IMAGE_TAG: $CI_COMMIT_SHORT_SHA
    PORT: "8081"
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "${ID_RSA_DEPLOYMENT}" | ssh-add -
  script:
    - echo "Deploying image with Docker Compose"
    # - apk update && apk add openssh-client
    # - chmod 400 $ID_RSA_DEPLOYMENT
    # - ssh -i $ID_RSA_DEPLOYMENT -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "command"
    - ssh  -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "mkdir -p /home/deployer/stage-deploy/"
    - scp -o StrictHostKeyChecking=no ./.env $SERVER_USER@$SERVER_IP:/home/deployer/stage-deploy/
    - ssh  -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "
        sed -i 's|IMAGE_REPO=.*|IMAGE_REPO=$IMAGE_REPO|' /home/deployer/stage-deploy/.env &&
        sed -i 's|IMAGE_NAME=.*|IMAGE_NAME=$IMAGE_NAME|' /home/deployer/stage-deploy/.env &&
        sed -i 's|IMAGE_TAG=.*|IMAGE_TAG=$IMAGE_TAG|' /home/deployer/stage-deploy/.env &&
        sed -i 's|PORT=.*|PORT=$PORT|' /home/deployer/stage-deploy/.env"
    - scp -o StrictHostKeyChecking=no ./docker-compose.yml $SERVER_USER@$SERVER_IP:/home/deployer/stage-deploy/
    - ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "
        docker compose -f /home/deployer/stage-deploy/docker-compose.yml down && 
        docker compose -f /home/deployer/stage-deploy/docker-compose.yml up -d"

# build_stage:
#   extends: .build
#   variables:
#     IMAGE_TAG: $VERSION
#   workflow:
#     rules:
#       - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "dev" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main" && $CI_COMMIT_REF_NAME == "main"
#       - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
#         when: never
#       - if: $CI_COMMIT_BRANCH && $CI_COMMIT_REF_NAME == "main"
  # before_script:
  #   - apk update
  #   - apk add jq || { echo 'jq installation failed'; exit 1; }
  #   - export VERSION=$(jq -r .version appinfo.json) || { echo 'Failed to get version'; exit 1; }

# deploy_stage:
#   stage: deploy
#   workflow:
#     rules:
#       - !reference [build_stage, rules]
#   variables:
#     IMAGE_TAG: $VERSION

